'use client';

import React, { useState } from 'react';

interface MediaKit {
  pressRelease: string;
  socialContent: string[];
  infographicData: any;
  brandAssets: string[];
  status: 'generating' | 'ready' | 'error';
}

export default function MediaKitGenerator({ adminId }: { adminId: string }) {
  const [mediaKit, setMediaKit] = useState<MediaKit | null>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedTemplate, setSelectedTemplate] = useState('championship');

  const generateMediaKit = async () => {
    setIsGenerating(true);
    setMediaKit(null);

    try {
      // Simulate AI generation process
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      const newMediaKit: MediaKit = {
        pressRelease: `FOR IMMEDIATE RELEASE
        
DISTRICT ATHLETICS PROGRAM ACHIEVES RECORD-BREAKING SEASON
        
Local high school athletics programs have set new standards for excellence this season, with unprecedented achievements across multiple sports. Student-athletes continue to demonstrate exceptional dedication, academic excellence, and community leadership.

"Our athletes embody the championship spirit both on and off the field," said Athletic Director. "This season showcases the incredible talent and character development happening in our district."

Key Highlights:
• 85% of student-athletes maintain 3.0+ GPA
• Record-breaking attendance at home games
• Community engagement at all-time high
• Multiple state tournament qualifications
• Scholarship opportunities secured

The district's commitment to developing well-rounded student-athletes continues to drive success at the highest levels. These achievements reflect the collaborative efforts of coaches, families, and the entire community.

Contact: Athletic Department
Phone: (555) 123-4567
Email: athletics@district.edu`,
        
        socialContent: [
          "🏆 CHAMPIONSHIP MINDSET: Our student-athletes are setting new standards both on the field and in the classroom! #ChampionshipCulture #StudentAthleteExcellence",
          "📚⚡ 85% of our athletes maintain 3.0+ GPA while competing at the highest level. That's what we call ULTRA performance! #AcademicAthletes #UltraPreps",
          "🏟️ Record-breaking crowd energy at tonight's game! This is what Friday Night Lights are all about. #FridayNightLights #CommunityPride",
          "🎯 State tournament bound! The hard work and dedication pays off. Time to make history! #StateBound #ChampionshipDreams"
        ],
        
        infographicData: {
          stats: [
            { label: 'Student-Athletes', value: '450+', icon: '👥' },
            { label: 'Sports Programs', value: '18', icon: '🏈' },
            { label: 'State Qualifiers', value: '12', icon: '🏆' },
            { label: 'Avg GPA', value: '3.4', icon: '📚' }
          ],
          achievements: [
            'District Champions - Football',
            'Regional Finalists - Basketball',
            'State Qualifiers - Track & Field',
            'Academic All-State Recognition'
          ]
        },
        
        brandAssets: [
          'Championship Logo Package',
          'Social Media Templates',
          'Press Conference Backdrop',
          'Award Ceremony Graphics',
          'Website Banner Assets'
        ],
        
        status: 'ready'
      };
      
      setMediaKit(newMediaKit);
    } catch (error) {
      setMediaKit({
        pressRelease: '',
        socialContent: [],
        infographicData: null,
        brandAssets: [],
        status: 'error'
      });
    } finally {
      setIsGenerating(false);
    }
  };

  const downloadMediaKit = () => {
    if (!mediaKit) return;
    
    const content = `ULTRAPREPS MEDIA KIT
    
${mediaKit.pressRelease}

SOCIAL MEDIA CONTENT:
${mediaKit.socialContent.join('\n\n')}

BRAND ASSETS:
${mediaKit.brandAssets.join('\n')}

Generated by UltraPreps AI • ${new Date().toLocaleDateString()}`;
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `media-kit-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="space-y-6">
      {/* Template Selection */}
      <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
        <h3 className="text-xl font-bold text-white mb-4">Media Kit Templates</h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {[
            { id: 'championship', label: 'Championship', icon: '🏆' },
            { id: 'recruitment', label: 'Recruitment', icon: '🎯' },
            { id: 'season-recap', label: 'Season Recap', icon: '📊' },
            { id: 'event-promotion', label: 'Event Promo', icon: '📢' }
          ].map((template) => (
            <button
              key={template.id}
              onClick={() => setSelectedTemplate(template.id)}
              className={`p-3 rounded-lg border text-sm font-semibold transition-all ${
                selectedTemplate === template.id
                  ? 'bg-blue-600 border-blue-400 text-white'
                  : 'bg-gray-800 border-gray-600 text-gray-300 hover:bg-gray-700'
              }`}
            >
              {template.icon} {template.label}
            </button>
          ))}
        </div>
      </div>

      {/* Generation Controls */}
      <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-xl font-bold text-white">AI Media Kit Generator</h3>
            <p className="text-gray-400 text-sm mt-1">ESPN-quality press materials in seconds</p>
          </div>
          <button
            onClick={generateMediaKit}
            disabled={isGenerating}
            className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed px-6 py-3 rounded-lg font-semibold text-white transition-all transform hover:scale-105"
          >
            {isGenerating ? (
              <div className="flex items-center space-x-2">
                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                <span>Generating...</span>
              </div>
            ) : (
              '🚀 Generate Media Kit'
            )}
          </button>
        </div>
      </div>

      {/* Media Kit Results */}
      {mediaKit && mediaKit.status === 'ready' && (
        <div className="space-y-6">
          {/* Press Release */}
          <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-xl font-bold text-yellow-400">📰 Press Release</h3>
              <button
                onClick={downloadMediaKit}
                className="bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg text-sm font-semibold text-white transition-all"
              >
                📥 Download Kit
              </button>
            </div>
            <div className="bg-gray-800 rounded-lg p-4 max-h-64 overflow-y-auto">
              <pre className="text-gray-300 text-sm whitespace-pre-wrap font-mono">
                {mediaKit.pressRelease}
              </pre>
            </div>
          </div>

          {/* Social Media Content */}
          <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
            <h3 className="text-xl font-bold text-blue-400 mb-4">📱 Social Media Ready</h3>
            <div className="grid gap-4">
              {mediaKit.socialContent.map((content, index) => (
                <div key={index} className="bg-gray-800 rounded-lg p-4">
                  <p className="text-gray-300 text-sm">{content}</p>
                  <button className="mt-2 text-blue-400 hover:text-blue-300 text-xs font-semibold">
                    📋 Copy to Clipboard
                  </button>
                </div>
              ))}
            </div>
          </div>

          {/* Quick Stats Infographic */}
          <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
            <h3 className="text-xl font-bold text-green-400 mb-4">📊 Key Statistics</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              {mediaKit.infographicData.stats.map((stat: any, index: number) => (
                <div key={index} className="bg-gray-800 rounded-lg p-4 text-center">
                  <div className="text-2xl mb-2">{stat.icon}</div>
                  <div className="text-2xl font-bold text-white">{stat.value}</div>
                  <div className="text-gray-400 text-sm">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>

          {/* Brand Assets */}
          <div className="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
            <h3 className="text-xl font-bold text-purple-400 mb-4">🎨 Brand Assets</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
              {mediaKit.brandAssets.map((asset, index) => (
                <div key={index} className="bg-gray-800 rounded-lg p-3 flex justify-between items-center">
                  <span className="text-gray-300 text-sm">{asset}</span>
                  <button className="bg-purple-600 hover:bg-purple-700 px-3 py-1 rounded text-xs font-semibold text-white transition-all">
                    Generate
                  </button>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {mediaKit && mediaKit.status === 'error' && (
        <div className="bg-red-900/60 rounded-xl p-6 border border-red-700">
          <h3 className="text-xl font-bold text-red-400 mb-2">❌ Generation Failed</h3>
          <p className="text-gray-300">Unable to generate media kit. Please try again.</p>
        </div>
      )}
    </div>
  );
}